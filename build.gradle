plugins {
    id 'application'
    id 'java-library'
    alias(libs.plugins.shadow.jar)
}

repositories {
    mavenCentral()
}

group = 'ru.bay.calculator'
version = '3.0.0'
description = 'calculator'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = "ru.bay.calculator.Calculator"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation libs.com.fasterxml.jackson.core.jackson.databind
    implementation libs.com.fasterxml.jackson.dataformat.jackson.dataformat.yaml
    implementation libs.org.apache.commons.commons.lang3
    implementation libs.org.slf4j.slf4j.api
    implementation libs.org.slf4j.slf4j.simple
    compileOnly libs.org.projectlombok.lombok
    annotationProcessor libs.org.projectlombok.lombok
    testImplementation platform(libs.junit.bom)
    testImplementation libs.junit.jupiter.api
    testImplementation libs.junit.jupiter.params
    testRuntimeOnly libs.junit.jupiter.engine
    testRuntimeOnly libs.junit.platform.launcher
}

def projectVersion = project.version.toString()

tasks.processResources {
    filesMatching('**/application.yml') {
        expand(version: projectVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

shadowJar {
    archiveBaseName.set(project.name)
    archiveClassifier.set("")
    archiveVersion.set("")
}